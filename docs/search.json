[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Elise Hachfeld",
    "section": "",
    "text": "Hello! My name is Elise Hachfeld and I am a junior at St. Olaf College. I am majoring in Bioinformatics with concentrations in statistics & data science, neuroscience, and nordic studies."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Elise Hachfeld",
    "section": "Education",
    "text": "Education\nSt. Olaf College | Northfield, MN BA | Sep 2022 - May 2026"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Elise Hachfeld",
    "section": "Experience",
    "text": "Experience"
  },
  {
    "objectID": "index.html#relevant-coursework",
    "href": "index.html#relevant-coursework",
    "title": "Elise Hachfeld",
    "section": "Relevant Coursework",
    "text": "Relevant Coursework"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "projects",
    "section": "",
    "text": "Ecological Data\n\n\n???\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGutenberg Data\n\n\nAcquiring Text Data from Gutenberg.org\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnited States Nursing Home Data\n\n\nExploratory Data Analysis of US Nursing Home Data from the Skilled Nursing Facility Cost Report (Data.CMS.gov)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnited States Nursing Home Data\n\n\nAn Exploratory Data Analysis of US Nursing Home Data from the Skilled Nursing Facility Cost Report\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html",
    "href": "projects/US_nursing_homes/US_nursing_homes.html",
    "title": "Mini_Project_1",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = FALSE, message =FALSE, warnings = FALSE)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(leaflet)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:viridis':\n\n    unemp\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(htmltools)\nlibrary(envalysis)\n\n# Import Nursing Home Data \n# https://data.cms.gov/provider-compliance/cost-report/skilled-nursing-facility-cost-report\nnursing_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/nursing_data.csv\") |&gt;\n  clean_names() |&gt;\n  select(-nursing_and_allied_health_education_activities)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 15057 Columns: 122\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): Provider CCN, Facility Name, Street Address, City, State Code, Zi...\ndbl (110): rpt_rec_num, Medicare CBSA Number, Type of Control, Total Days Ti...\nlgl   (2): Total RUG Days, Nursing and Allied Health Education Activities\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Import List of State Names and State Abbreviations for Joining nursing_data with states_sf\nstate_abbr_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/state_abbr.csv\") |&gt;\n  clean_names() |&gt;\n  select(-standard) |&gt;\n  mutate(state = str_to_lower(state))\n\nRows: 55 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): State, Standard, Postal\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Import US States Data Using sf and maps Packages\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry) |&gt;\n  mutate(name = str_to_lower(name))\n\nstates_polygon &lt;- map_data(\"state\") |&gt;\n  select(region, group, order, lat, long)\n\n# Import State Population Data \n# https://www.pewtrusts.org/en/research-and-analysis/articles/2022/04/25/a-third-of-states-lost-population-in-2021\npop_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/2020_pop.csv\") |&gt;\n  clean_names() |&gt;\n  mutate(state = str_to_lower(state))\n\nRows: 51 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): State\ndbl (1): Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html#data-import",
    "href": "projects/US_nursing_homes/US_nursing_homes.html#data-import",
    "title": "Mini_Project_1",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = FALSE, message =FALSE, warnings = FALSE)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(leaflet)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:viridis':\n\n    unemp\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(htmltools)\nlibrary(envalysis)\n\n# Import Nursing Home Data \n# https://data.cms.gov/provider-compliance/cost-report/skilled-nursing-facility-cost-report\nnursing_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/nursing_data.csv\") |&gt;\n  clean_names() |&gt;\n  select(-nursing_and_allied_health_education_activities)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 15057 Columns: 122\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): Provider CCN, Facility Name, Street Address, City, State Code, Zi...\ndbl (110): rpt_rec_num, Medicare CBSA Number, Type of Control, Total Days Ti...\nlgl   (2): Total RUG Days, Nursing and Allied Health Education Activities\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Import List of State Names and State Abbreviations for Joining nursing_data with states_sf\nstate_abbr_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/state_abbr.csv\") |&gt;\n  clean_names() |&gt;\n  select(-standard) |&gt;\n  mutate(state = str_to_lower(state))\n\nRows: 55 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): State, Standard, Postal\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Import US States Data Using sf and maps Packages\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry) |&gt;\n  mutate(name = str_to_lower(name))\n\nstates_polygon &lt;- map_data(\"state\") |&gt;\n  select(region, group, order, lat, long)\n\n# Import State Population Data \n# https://www.pewtrusts.org/en/research-and-analysis/articles/2022/04/25/a-third-of-states-lost-population-in-2021\npop_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/2020_pop.csv\") |&gt;\n  clean_names() |&gt;\n  mutate(state = str_to_lower(state))\n\nRows: 51 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): State\ndbl (1): Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html#plot-1-numeric-variable",
    "href": "projects/US_nursing_homes/US_nursing_homes.html#plot-1-numeric-variable",
    "title": "Mini_Project_1",
    "section": "Plot 1 (Numeric variable)",
    "text": "Plot 1 (Numeric variable)\n\n\n\n\n\n\n\n\n\n      min       Q1   median       Q3      max     mean       sd     n missing\n 21.07186 43.97446 51.82551 62.96279 101.0228 53.93941 16.72434 15527       0\n\n\nAlt-Text: This choropleth plot displays the 48 contiguous US states colored by the number of nursing home beds available per 10,000 people. The data ranges from about 21 to 101 beds per 10,000 people. The western half of the US has a relatively low number of beds, while the Midwest has more. Iowa has the greatest number of beds. The data were obtained from the Skilled Nursing Facility Cost Report and 2020 Decennial Population Data.\nSANILAC COUNTY MEDICAL CARE FACILITY of MI had 22,287 beds and was removed from the data for this analysis."
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html#plot-2-categorical-variable",
    "href": "projects/US_nursing_homes/US_nursing_homes.html#plot-2-categorical-variable",
    "title": "Mini_Project_1",
    "section": "Plot 2 (categorical variable)",
    "text": "Plot 2 (categorical variable)\nNote: I created both my categorical variables from numerical variables in the data set because there weren’t any appropriate existing variables.\n\n\n\n\n\n\n\n\n\nAlt-Text: This choropleth plot displays the 48 contiguous US states colored by the most common type of ownership for nursing homes in the state. The three types of ownership are Nonprofit, Proprietary and Governmental. All of the states are dominated by Proprietary nursing homes except for four: North Dakota, South Dakota and Minnesota have more Nonprofit nursing homes than other types and Indiana has more Governmental nursing homes. The data were obtained from the Skilled Nursing Facility Cost Report."
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html#plot-1-numeric",
    "href": "projects/US_nursing_homes/US_nursing_homes.html#plot-1-numeric",
    "title": "Mini_Project_1",
    "section": "Plot 1 (numeric)",
    "text": "Plot 1 (numeric)"
  },
  {
    "objectID": "projects/US_nursing_homes/US_nursing_homes.html#plot-2-categorical",
    "href": "projects/US_nursing_homes/US_nursing_homes.html#plot-2-categorical",
    "title": "Mini_Project_1",
    "section": "Plot 2 (categorical)",
    "text": "Plot 2 (categorical)\nNote: there are no observations in the $20 million - $25 million category so I did not provide a color for that level.\n\n\n[1] \"Less than $10 million\"     \"$10 million - $15 million\"\n[3] \"$15 million - $20 million\" \"Greater than $25 million\" \n\n\n\n\n\n\nTWIN FOUNTAINS HOME of GA had a gross revenue of $1,300,406,865 and was removed for this analysis."
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#plot-1-numeric-variable",
    "href": "projects/US_nursing_homes/index.html#plot-1-numeric-variable",
    "title": "United States Nursing Home Data",
    "section": "Plot 1 (Numeric variable)",
    "text": "Plot 1 (Numeric variable)\n\nnursing_summary |&gt;\n  ggplot(aes(long, lat, group = group)) + \n  geom_polygon(aes(fill = beds_10k), color = \"black\") + \n  labs(title = \"Nursing Home Beds Available Nationwide\",\n       fill = \"Beds Per\\n10,000 People\",\n       caption = \"Skilled Nursing Facility Cost Report (Data.CMS.gov)\\n2020 Decennial Population Data (pewtrusts.org) \") +\n  coord_map() +\n  theme_void() +\n  theme(legend.position = \"bottom\",\n        plot.caption = element_text(hjust = 0),\n                plot.title = element_text(face = \"bold\"),\n                legend.title = element_text(face = \"bold\")) +\n  scale_fill_viridis()  \n\n\n\n\n\n\n\nfavstats(~beds_10k, data = nursing_summary)\n\n      min       Q1   median       Q3      max     mean       sd     n missing\n 21.07186 43.97446 51.82551 62.96279 101.0228 53.93941 16.72434 15527       0\n\n\nAlt-Text: This choropleth plot displays the 48 contiguous US states colored by the number of nursing home beds available per 10,000 people. The data ranges from about 21 to 101 beds per 10,000 people. The western half of the US has a relatively low number of beds, while the Midwest has more. Iowa has the greatest number of beds. The data were obtained from the Skilled Nursing Facility Cost Report and 2020 Decennial Population Data.\nSANILAC COUNTY MEDICAL CARE FACILITY of MI had 22,287 beds and was removed from the data for this analysis."
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#plot-2-categorical-variable",
    "href": "projects/US_nursing_homes/index.html#plot-2-categorical-variable",
    "title": "United States Nursing Home Data",
    "section": "Plot 2 (categorical variable)",
    "text": "Plot 2 (categorical variable)\nNote: I created both my categorical variables from numerical variables in the data set because there weren’t any appropriate existing variables.\n\nnursing_summary |&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) + \n    geom_polygon(aes(fill = top_control_type), color = \"black\") + \n    coord_map() + \n    theme_void() +  \n  theme(legend.position = \"bottom\",\n        plot.caption = element_text(hjust = 0),\n                plot.title = element_text(face = \"bold\"),\n                legend.title = element_text(face = \"bold\")) +\n  labs(title = \"Most Common Type of Nursing Home Ownership\",\n       fill = \"Type of Control\",\n       caption = \"Data: Skilled Nursing Facility Cost Report (Data.CMS.gov)\") +\n    scale_fill_manual(values = c(\"#77AB43\", \"#008FD5\", \"#FF2700\"))\n\n\n\n\n\n\n\n\nAlt-Text: This choropleth plot displays the 48 contiguous US states colored by the most common type of ownership for nursing homes in the state. The three types of ownership are Nonprofit, Proprietary and Governmental. All of the states are dominated by Proprietary nursing homes except for four: North Dakota, South Dakota and Minnesota have more Nonprofit nursing homes than other types and Indiana has more Governmental nursing homes. The data were obtained from the Skilled Nursing Facility Cost Report."
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#plot-1-numeric",
    "href": "projects/US_nursing_homes/index.html#plot-1-numeric",
    "title": "United States Nursing Home Data",
    "section": "Plot 1 (numeric)",
    "text": "Plot 1 (numeric)\n\nnursing_summary &lt;- nursing_summary |&gt;\n  mutate(num_labs_1 = str_c(name, \": \", snf_mean_stay_round, \" days\"))\npal &lt;- colorNumeric(\"Blues\", nursing_summary$snf_mean_stay_round)\n\n\nleaflet(nursing_summary) |&gt;\n  addTiles() |&gt; \n  setView(lng = -96.25,\n          lat = 40,\n          zoom = 3.5) |&gt;\n  addPolygons(weight = 2,\n              opacity = 1,\n              color = \"black\",\n              fillColor = ~ pal(nursing_summary$snf_mean_stay_round),\n              fillOpacity = 0.7,\n              label = ~ num_labs_1,\n              highlightOptions = highlightOptions(weight = 4,\n                                                  color = \"#668\",\n                                                  fillOpacity = 0.8,\n                                                  bringToFront = TRUE),\n              labelOptions = labelOptions(style = list(\"font-weight\" = \"normal\",\n                                                       padding = \"3px 8px\"),\n                                          textsize = \"15px\",\n                                          direction = \"auto\")) |&gt;\n  addLegend(pal = pal,\n            values = ~ nursing_summary$snf_mean_stay_round,\n            title = paste(\"Average SNF&lt;br&gt;Stay Length\"),\n            position = \"bottomright\")"
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#plot-2-categorical",
    "href": "projects/US_nursing_homes/index.html#plot-2-categorical",
    "title": "United States Nursing Home Data",
    "section": "Plot 2 (categorical)",
    "text": "Plot 2 (categorical)\nNote: there are no observations in the $20 million - $25 million category so I did not provide a color for that level.\n\nnursing_summary &lt;- nursing_summary |&gt;\nmutate(cat_labs_1 = paste0(\"Total Gross Revenue: \", tot_gross_revenue, \"&lt;br&gt;\",\n                         \"Number of Nursing Homes: \", homes_per_state, \"&lt;br&gt;\",\n                         \"Average Gross Revenue Per Home: \", tot_revenue_homes_round))\n        \nlabels &lt;- lapply(nursing_summary$cat_labs_1, HTML)\n\nlevels(nursing_summary$revenue_cat)\n\n[1] \"Less than $10 million\"     \"$10 million - $15 million\"\n[3] \"$15 million - $20 million\" \"Greater than $25 million\" \n\nfactpal &lt;- colorFactor(c(\"#8FDA04FF\",\n                         \"#009F3FFF\",\n                         \"#132157FF\",\n                         \"#FFF800FF\"),\n                       levels(nursing_summary$revenue_cat))\n\n\nleaflet(nursing_summary) |&gt;\n  setView(lng = -96.25,\n          lat = 40,\n          zoom = 3.5) |&gt;\n  addTiles() |&gt; \n  addPolygons(weight = 2,\n              opacity = 1,\n              color = \"black\",\n              fillColor = ~ factpal(nursing_summary$revenue_cat),\n              dashArray = \"1\",\n              fillOpacity = 0.7,\n  highlightOptions = highlightOptions(weight = 5,\n                                      color = \"#666\",\n                                      fillOpacity = 0.7,\n                                      bringToFront = TRUE),\n  label = labels,\n  labelOptions = labelOptions(style = list(\"font-weight\" = \"normal\",\n                                           padding = \"3px 8px\"),\n                              textsize = \"15px\",\n                              direction = \"auto\")) |&gt;\n  addLegend(pal = factpal,\n            values = ~ nursing_summary$revenue_cat, \n            opacity = 0.7,\n            title = \"Gross Revenue\",\n            position = \"bottomright\")\n\n\n\n\n\nTWIN FOUNTAINS HOME of GA had a gross revenue of $1,300,406,865 and was removed for this analysis."
  },
  {
    "objectID": "projects/US_nursing_homes/index.html",
    "href": "projects/US_nursing_homes/index.html",
    "title": "United States Nursing Home Data",
    "section": "",
    "text": "In this project, I used the Skilled Nursing Facility Cost Report collected by the Centers for Medicare & Medicaid Services in order to investigate characteristics of nursing homes in the United States. The dataset includes a wide range of information about nursing homes, including revenue, number of beds, and average stay duration."
  },
  {
    "objectID": "projects/Gutenberg Data/index.html",
    "href": "projects/Gutenberg Data/index.html",
    "title": "Gutenberg Data",
    "section": "",
    "text": "#Scrape the top 100 books from the past 30 days\nget_gutenberg_top100 &lt;- function() {\n  if (robotstxt::paths_allowed(\"https://www.gutenberg.org/browse/scores/top#books-last30\") == \"TRUE\") {\n    gutenberg_page &lt;- read_html(\"https://www.gutenberg.org/browse/scores/top#books-last30\")\n    books_last30 &lt;- html_nodes(gutenberg_page, \"#books-last30+ ol li\")\n    books_last30_text &lt;- html_text(books_last30)\n    books_last30_tbl &lt;- tibble(\n  title = gsub(\" by.*\", \"\", books_last30_text),\n  author = gsub(\".* by \", \"\", books_last30_text),\n  popularity = seq.int(1,100)\n)\n    \n  df_books30 &lt;&lt;- books_last30_tbl\n  }\n}\n\nget_gutenberg_top100()\n\n\ntop_100_books &lt;- gutenberg_works() |&gt;\n  filter(title %in% df_books30$title)\n\n#top_100_text &lt;- gutenberg_download(top_100_books$gutenberg_id, meta_fields = c(\"title\", \"author\"))\n\n#top_100_data &lt;- top_100_text |&gt;\n#  mutate(text = na_if(text, \"\")) |&gt;\n#  na.omit() |&gt;\n#  group_by(title) |&gt;\n#  mutate(line_num = row_number()) |&gt;\n#  ungroup()\n\n\nbook_ids &lt;- top_100_books$gutenberg_id\nbooks_with_warnings &lt;- list()\nbooks_with_warningsb &lt;- list()\ntop_100_data &lt;- data.frame()\n\ndownload_book &lt;- function(book_id, mirror = \"http://aleph.gutenberg.org\") {\n  tryCatch(\n    {\n      data &lt;- gutenberg_download(book_id, meta_fields = c(\"title\", \"author\"), mirror = mirror)\n      top_100_data &lt;&lt;- bind_rows(top_100_data, data)\n    },\n    warning = function(w) {\n      books_with_warnings &lt;&lt;- c(books_with_warnings, book_id)\n      message(\"Warning for book ID: \", book_id) \n      return(NULL)\n    }\n  )\n}\n\nbook_data &lt;- lapply(book_ids, download_book)\n\nprint(\"Books with warnings:\")\n\n[1] \"Books with warnings:\"\n\nprint(books_with_warnings)\n\n[[1]]\n[1] 11\n\n[[2]]\n[1] 46\n\n[[3]]\n[1] 100\n\n[[4]]\n[1] 120\n\n[[5]]\n[1] 145\n\n[[6]]\n[1] 174\n\n[[7]]\n[1] 345\n\n[[8]]\n[1] 730\n\n[[9]]\n[1] 1342\n\n[[10]]\n[1] 1513\n\n[[11]]\n[1] 2148\n\n[[12]]\n[1] 2199\n\n[[13]]\n[1] 2489\n\n[[14]]\n[1] 2641\n\n[[15]]\n[1] 19508\n\n[[16]]\n[1] 19640\n\n[[17]]\n[1] 41445\n\n[[18]]\n[1] 43936\n\n[[19]]\n[1] 51713\n\n[[20]]\n[1] 64317\n\n[[21]]\n[1] 67098\n\n[[22]]\n[1] 67979\n\ntop_100_data &lt;- top_100_data |&gt;\n  mutate(text = na_if(text, \"\")) |&gt; #changing empty lines to NA\n  na.omit() |&gt; #removing those empty (NA) lines\n  group_by(title) |&gt;\n  mutate(line_num = row_number()) |&gt; #adding line number (starts at 1 for each book)\n  ungroup()\n\n\n#print(top_100_data)\n#Note: this dataset is way too long to render to pdf. \n\n#For viewing\ntop_100_line_1 &lt;- top_100_data |&gt;\n  filter(line_num == 1)\nhead(top_100_line_1)\n\n# A tibble: 6 × 5\n  gutenberg_id text                                        title author line_num\n         &lt;int&gt; &lt;chr&gt;                                       &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;\n1           33 The Scarlet Letter                          The … Hawth…        1\n2           41 The Legend of Sleepy Hollow                 The … Irvin…        1\n3           42 [Illustration]                              The … Steve…        1\n4           45 ANNE OF GREEN GABLES                        Anne… Montg…        1\n5          150 ******************************************… The … Plato         1\n6          244 A STUDY IN SCARLET                          A St… Doyle…        1"
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#join-data",
    "href": "projects/US_nursing_homes/index.html#join-data",
    "title": "United States Nursing Home Data",
    "section": "Join Data",
    "text": "Join Data\n\nMode &lt;- function(x) {\n  ux &lt;- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\nstates_geo &lt;- states_sf |&gt; #creates data set with state names, abbreviations and geometry\n  right_join(state_abbr_data,\n             by = c(\"name\" = \"state\"))\n\nstates_geo &lt;- states_geo |&gt; #adds latitude, longitude, group, order\n  right_join(states_polygon,\n             by = c(\"name\" = \"region\"))\n\nnursing_summary &lt;- nursing_data |&gt;\n  filter(state_code != \"PR\" &\n         state_code != \"DC\") |&gt; #removes DC & Puerto Rico\n  filter(number_of_beds &lt; 1000 & gross_revenue &lt; 1000000000) |&gt;\n  mutate(type_of_control = as.factor(type_of_control), # creates factor with levels Voluntary, Proprietary, or Governmental from numerical variable type_of_control.\n         type_of_control = fct_recode(type_of_control,\n                           \"Voluntary Nonprofit-Church\" = \"1\",\n                           \"Voluntary Nonprofit-Other\" = \"2\",\n                           \"Proprietary-Individual\" = \"3\",\n                           \"Proprietary-Corporation\" = \"4\",\n                           \"Proprietary-Partnership\" = \"5\",\n                           \"Proprietary-Other\" = \"6\",\n                           \"Governmental-Federal\" = \"7\",\n                           \"Governmental-City-County\" = \"8\",\n                           \"Governmental-County\" = \"9\",\n                           \"Governmental-State\" = \"10\",\n                           \"Governmental-facility District\" = \"11\",\n                           \"Governmental-City\" = \"12\",\n                           \"Governmental-Other\" = \"13\"),\n         type_of_control = fct_collapse(type_of_control, Nonprofit = c(\"Voluntary Nonprofit-Church\",\n                                                                       \"Voluntary Nonprofit-Other\"),\n                                                         Proprietary = c(\"Proprietary-Individual\",\n                                                                         \"Proprietary-Corporation\",\n                                                                         \"Proprietary-Partnership\",\n                                                                         \"Proprietary-Other\"),\n                                                         Governmental = c(\"Governmental-Federal\",\n                                                                          \"Governmental-City-County\",\n                                                                          \"Governmental-County\",\n                                                                          \"Governmental-State\",\n                                                                          \"Governmental-facility District\",\n                                                                          \"Governmental-City\",\n                                                                          \"Governmental-Other\"))) |&gt;\n  group_by(state_code) |&gt;\n  summarize(homes_per_state = n(), #number of nursing homes per state\n            total_beds = sum(number_of_beds,\n                             na.rm = TRUE),  #total beds per state\n            snf_mean_stay = mean(snf_average_length_of_stay_total,\n                                 na.rm = TRUE), #mean snf stay length per state \n            top_control_type = Mode(type_of_control), #most common type of control per state\n            tot_gross_revenue = sum(gross_revenue, na.rm = TRUE), #sum gross revenue per state\n            tot_revenue_homes = tot_gross_revenue/homes_per_state) #total gross revenue/number of beds per state\n\n\n#creates a categorical variable from total gross revenue/number of beds per state\nnursing_summary &lt;- within(nursing_summary, {revenue_cat &lt;- NA \n                                            revenue_cat[tot_revenue_homes &lt; 10000000] &lt;- \"Less than $10 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 10000000 & tot_revenue_homes &lt; 15000000] &lt;- \"$10 million - $15 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 15000000 & tot_revenue_homes &lt; 20000000] &lt;- \"$15 million - $20 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 20000000 & tot_revenue_homes &lt; 25000000] &lt;- \"$20 million - $25 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 25000000] &lt;- \"Greater than $25 million\"}) |&gt;\n  mutate(revenue_cat = as.factor(revenue_cat),\n         revenue_cat = fct_relevel(revenue_cat, c(\"Less than $10 million\",\n                                                  \"$10 million - $15 million\",\n                                                  \"$15 million - $20 million\",\n                                                  \"$20 million - $25 million\",\n                                                  \"Greater than $25 million\")))\n\n\n nursing_summary &lt;- states_geo |&gt;\n  right_join(nursing_summary,\n             by = c(\"postal\" = \"state_code\")) |&gt; #adds geography data to summary data\n  left_join(pop_data,\n            by = c(\"name\" = \"state\")) |&gt; #adds additional population data\n  mutate(beds_pop = total_beds / population, #beds per person\n         beds_10k = beds_pop * 10000, #beds per 10,000 people\n         name = str_to_title(name),\n         snf_mean_stay_round = round(snf_mean_stay, digits = 2),\n         tot_revenue_homes_round = round(tot_revenue_homes, digits = 2)) |&gt;\n  filter(name != \"Hawaii\" & name != \"Alaska\") |&gt;\n  select(name,\n         postal,\n         total_beds,\n         population,\n         homes_per_state,\n         beds_pop,\n         beds_10k,\n         snf_mean_stay,\n         snf_mean_stay_round,\n         top_control_type,\n         tot_gross_revenue,\n         tot_revenue_homes,\n         tot_revenue_homes_round,\n         revenue_cat,\n         geometry,\n         lat, \n         long,\n         group,\n         order)\n   \n \n#getting statistics in order to create levels for new categorical variable (above).\ndistinct &lt;- nursing_summary |&gt;\n  st_drop_geometry() |&gt;\n  distinct(tot_revenue_homes)\n\nfavstats(~tot_revenue_homes,  data = distinct)\n\n     min      Q1   median       Q3      max     mean      sd  n missing\n 5114358 8139979 10157439 13258071 28429799 11113745 4200457 48       0"
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#outlier-analysis",
    "href": "projects/US_nursing_homes/index.html#outlier-analysis",
    "title": "United States Nursing Home Data",
    "section": "Outlier Analysis",
    "text": "Outlier Analysis\n\noutliers_check &lt;- nursing_data |&gt;\n  select(facility_name, state_code, gross_revenue, number_of_beds, snf_average_length_of_stay_total)\n\nnursing_data |&gt;\n  ggplot(aes(gross_revenue, number_of_beds)) +\n  geom_point() +\n  theme_bw() +\n  labs(x = \"Gross Revenue\",\n       y = \"Number of Beds\")\n\n\n\n\n\n\n\nnursing_data |&gt;\n  filter(number_of_beds &lt; 1000 & gross_revenue &lt; 1000000000) |&gt;\n  ggplot(aes(gross_revenue, number_of_beds)) +\n  geom_point() +\n  theme_bw() +\n  labs(x = \"Gross Revenue\",\n       y = \"Number of Beds\")\n\n\n\n\n\n\n\n\nBased on this analysis, two points were removed from the dataset.\n- Twin Fountains Home (Georgia) had a gross revenue of $1,300,406,865\n- Sanilac County Medical Care Facility (Michigan) had 22,287 beds."
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#joining-data",
    "href": "projects/US_nursing_homes/index.html#joining-data",
    "title": "United States Nursing Home Data",
    "section": "Joining Data",
    "text": "Joining Data\n\nMode &lt;- function(x) {\n  ux &lt;- unique(x)\n  ux[which.max(tabulate(match(x, ux)))]\n}\n\nstates_geo &lt;- states_sf |&gt; #creates data set with state names, abbreviations and geometry\n  right_join(state_abbr_data,\n             by = c(\"name\" = \"state\"))\n\nstates_geo &lt;- states_geo |&gt; #adds latitude, longitude, group, order\n  right_join(states_polygon,\n             by = c(\"name\" = \"region\"))\n\nnursing_summary &lt;- nursing_data |&gt;\n  filter(state_code != \"PR\" &\n         state_code != \"DC\") |&gt; #removes DC & Puerto Rico\n  filter(number_of_beds &lt; 1000 & gross_revenue &lt; 1000000000) |&gt;\n  mutate(type_of_control = as.factor(type_of_control), # creates factor with levels Voluntary, Proprietary, or Governmental from numerical variable type_of_control.\n         type_of_control = fct_recode(type_of_control,\n                           \"Voluntary Nonprofit-Church\" = \"1\",\n                           \"Voluntary Nonprofit-Other\" = \"2\",\n                           \"Proprietary-Individual\" = \"3\",\n                           \"Proprietary-Corporation\" = \"4\",\n                           \"Proprietary-Partnership\" = \"5\",\n                           \"Proprietary-Other\" = \"6\",\n                           \"Governmental-Federal\" = \"7\",\n                           \"Governmental-City-County\" = \"8\",\n                           \"Governmental-County\" = \"9\",\n                           \"Governmental-State\" = \"10\",\n                           \"Governmental-facility District\" = \"11\",\n                           \"Governmental-City\" = \"12\",\n                           \"Governmental-Other\" = \"13\"),\n         type_of_control = fct_collapse(type_of_control, Nonprofit = c(\"Voluntary Nonprofit-Church\",\n                                                                       \"Voluntary Nonprofit-Other\"),\n                                                         Proprietary = c(\"Proprietary-Individual\",\n                                                                         \"Proprietary-Corporation\",\n                                                                         \"Proprietary-Partnership\",\n                                                                         \"Proprietary-Other\"),\n                                                         Governmental = c(\"Governmental-Federal\",\n                                                                          \"Governmental-City-County\",\n                                                                          \"Governmental-County\",\n                                                                          \"Governmental-State\",\n                                                                          \"Governmental-facility District\",\n                                                                          \"Governmental-City\",\n                                                                          \"Governmental-Other\"))) |&gt;\n  group_by(state_code) |&gt;\n  summarize(homes_per_state = n(), #number of nursing homes per state\n            total_beds = sum(number_of_beds,\n                             na.rm = TRUE),  #total beds per state\n            snf_mean_stay = mean(snf_average_length_of_stay_total,\n                                 na.rm = TRUE), #mean snf stay length per state \n            top_control_type = Mode(type_of_control), #most common type of control per state\n            tot_gross_revenue = sum(gross_revenue, na.rm = TRUE), #sum gross revenue per state\n            tot_revenue_homes = tot_gross_revenue/homes_per_state) #total gross revenue/number of beds per state\n\n\n#creates a categorical variable from total gross revenue/number of beds per state\nnursing_summary &lt;- within(nursing_summary, {revenue_cat &lt;- NA \n                                            revenue_cat[tot_revenue_homes &lt; 10000000] &lt;- \"Less than $10 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 10000000 & tot_revenue_homes &lt; 15000000] &lt;- \"$10 million - $15 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 15000000 & tot_revenue_homes &lt; 20000000] &lt;- \"$15 million - $20 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 20000000 & tot_revenue_homes &lt; 25000000] &lt;- \"$20 million - $25 million\"\n                                            revenue_cat[tot_revenue_homes &gt;= 25000000] &lt;- \"Greater than $25 million\"}) |&gt;\n  mutate(revenue_cat = as.factor(revenue_cat),\n         revenue_cat = fct_relevel(revenue_cat, c(\"Less than $10 million\",\n                                                  \"$10 million - $15 million\",\n                                                  \"$15 million - $20 million\",\n                                                  \"$20 million - $25 million\",\n                                                  \"Greater than $25 million\")))\n\n\n nursing_summary &lt;- states_geo |&gt;\n  right_join(nursing_summary,\n             by = c(\"postal\" = \"state_code\")) |&gt; #adds geography data to summary data\n  left_join(pop_data,\n            by = c(\"name\" = \"state\")) |&gt; #adds additional population data\n  mutate(beds_pop = total_beds / population, #beds per person\n         beds_10k = beds_pop * 10000, #beds per 10,000 people\n         name = str_to_title(name),\n         snf_mean_stay_round = round(snf_mean_stay, digits = 2),\n         tot_revenue_homes_round = round(tot_revenue_homes, digits = 2)) |&gt;\n  filter(name != \"Hawaii\" & name != \"Alaska\") |&gt;\n  select(name,\n         postal,\n         total_beds,\n         population,\n         homes_per_state,\n         beds_pop,\n         beds_10k,\n         snf_mean_stay,\n         snf_mean_stay_round,\n         top_control_type,\n         tot_gross_revenue,\n         tot_revenue_homes,\n         tot_revenue_homes_round,\n         revenue_cat,\n         geometry,\n         lat, \n         long,\n         group,\n         order)\n   \n \n#getting statistics in order to create levels for new categorical variable (above).\ndistinct &lt;- nursing_summary |&gt;\n  st_drop_geometry() |&gt;\n  distinct(tot_revenue_homes)\n\nfavstats(~tot_revenue_homes,  data = distinct)\n\n     min      Q1   median       Q3      max     mean      sd  n missing\n 5114358 8139979 10157439 13258071 28429799 11113745 4200457 48       0"
  },
  {
    "objectID": "projects/US_nursing_homes/index.html#importing-data",
    "href": "projects/US_nursing_homes/index.html#importing-data",
    "title": "United States Nursing Home Data",
    "section": "Importing Data",
    "text": "Importing Data\n\n# Loading Nursing Home Data \n# https://data.cms.gov/provider-compliance/cost-report/skilled-nursing-facility-cost-report\nnursing_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/nursing_data.csv\") |&gt;\n  clean_names() |&gt;\n  select(-nursing_and_allied_health_education_activities)\n\n# Loading state abbreviations for for joining with geographic data\nstate_abbr_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/state_abbr.csv\") |&gt;\n  clean_names() |&gt;\n  select(-standard) |&gt;\n  mutate(state = str_to_lower(state))\n\n# Loading US states geographic data using sf and maps packages\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt;\n  select(name, geometry) |&gt;\n  mutate(name = str_to_lower(name))\n\nstates_polygon &lt;- map_data(\"state\") |&gt;\n  select(region, group, order, lat, long)\n\n# Loading state population data \n# https://www.pewtrusts.org/en/research-and-analysis/articles/2022/04/25/a-third-of-states-lost-population-in-2021\npop_data &lt;- read_csv(\"https://raw.githubusercontent.com/elisefeld/elise_data_dump/main/2020_pop.csv\") |&gt;\n  clean_names() |&gt;\n  mutate(state = str_to_lower(state))"
  }
]